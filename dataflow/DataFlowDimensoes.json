{
	"name": "DataFlowDimensoes",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ItemLocacaoTransform",
						"type": "DatasetReference"
					},
					"name": "SourceItemLocacao"
				},
				{
					"dataset": {
						"referenceName": "ClienteTransform",
						"type": "DatasetReference"
					},
					"name": "SourceCliente"
				},
				{
					"dataset": {
						"referenceName": "CidadeTransform",
						"type": "DatasetReference"
					},
					"name": "SourceCidade"
				},
				{
					"dataset": {
						"referenceName": "EstadoTransform",
						"type": "DatasetReference"
					},
					"name": "SourceEstado"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimTempoDW",
						"type": "DatasetReference"
					},
					"name": "SinkDimTempo"
				},
				{
					"dataset": {
						"referenceName": "DimClienteDW",
						"type": "DatasetReference"
					},
					"name": "SinkDimCliente"
				},
				{
					"dataset": {
						"referenceName": "DimLocalDW",
						"type": "DatasetReference"
					},
					"name": "SinkDimLocal"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select2"
				},
				{
					"name": "surrogateKey2"
				},
				{
					"name": "JoinLocal"
				},
				{
					"name": "select3"
				},
				{
					"name": "surrogateKey3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Nr_Pedido as integer,",
				"          Dt_Locacao as timestamp,",
				"          Cd_Cliente as integer,",
				"          Cd_Agencia as integer,",
				"          Qt_Dias as integer,",
				"          Vl_Total as decimal(38,18),",
				"          Status as string,",
				"          Dt_Retirada as timestamp,",
				"          Dt_Entrega as timestamp,",
				"          Cd_Func as integer,",
				"          Dt_Pagto as timestamp,",
				"          Cd_Age_Bco as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SourceItemLocacao",
				"source(output(",
				"          Cd_cliente as integer,",
				"          Nm_Cliente as string,",
				"          Cd_Tp_Cliente as integer,",
				"          Nr_Estrelas as integer,",
				"          Nr_Habilitacao as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SourceCliente",
				"source(output(",
				"          Cd_Cidade as integer,",
				"          Nm_Cidade as string,",
				"          Cd_Estado as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SourceCidade",
				"source(output(",
				"          Cd_Estado as integer,",
				"          Nm_Estado as string,",
				"          Sigla_Estado as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SourceEstado",
				"SourceItemLocacao select(mapColumn(",
				"          Cd_Cliente,",
				"          Nr_Pedido,",
				"          Dt_Locacao,",
				"          Dt_Retirada,",
				"          Dt_Entrega,",
				"          Dt_Pagto",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 keyGenerate(output(id_Tempo as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"SourceCliente select(mapColumn(",
				"          Cd_cliente,",
				"          Nm_Cliente,",
				"          Nr_Estrelas",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 keyGenerate(output(id_Cliente as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey2",
				"SourceCidade, SourceEstado join(SourceCidade@Cd_Estado == SourceEstado@Cd_Estado,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> JoinLocal",
				"JoinLocal select(mapColumn(",
				"          Nm_Cidade,",
				"          Nm_Estado,",
				"          Sigla_Estado",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 keyGenerate(output(id_local as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey3",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['DimTempo'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkDimTempo",
				"surrogateKey2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['DimCliente'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkDimCliente",
				"surrogateKey3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['DimLocal'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkDimLocal"
			]
		}
	}
}